name: CI

on:
  push:
  pull_request:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build
        run: cargo build --verbose --release

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: http-proxy-ipv6-pool.exe
            asset_name: http-proxy-ipv6-pool-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-macos-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          if-no-files-found: error

  release:
    name: Release
    needs: [test, security_audit, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          cp artifacts/http-proxy-ipv6-pool-linux-x86_64/http-proxy-ipv6-pool release-assets/http-proxy-ipv6-pool-linux-x86_64
          cp artifacts/http-proxy-ipv6-pool-linux-aarch64/http-proxy-ipv6-pool release-assets/http-proxy-ipv6-pool-linux-aarch64
          cp artifacts/http-proxy-ipv6-pool-windows-x86_64.exe/http-proxy-ipv6-pool.exe release-assets/http-proxy-ipv6-pool-windows-x86_64.exe
          cp artifacts/http-proxy-ipv6-pool-macos-x86_64/http-proxy-ipv6-pool release-assets/http-proxy-ipv6-pool-macos-x86_64
          cp artifacts/http-proxy-ipv6-pool-macos-aarch64/http-proxy-ipv6-pool release-assets/http-proxy-ipv6-pool-macos-aarch64
          ls -la release-assets/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

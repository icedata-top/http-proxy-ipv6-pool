name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            ## What's Changed

            See the [CHANGELOG](https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md) for details.

            ## Installation

            ### Binary Downloads
            Download the appropriate binary for your platform from the assets below.

            ### Using Cargo
            ```bash
            cargo install --git https://github.com/${{ github.repository }} --tag ${{ github.ref_name }}
            ```

            ## Usage

            ```bash
            http-proxy-ipv6-pool --listen 0.0.0.0:51080 --ipv6 2001:a:a:: --prefix-len 48 --username <username> --password <password>
            ```

            For more details, see the [README](https://github.com/${{ github.repository }}/blob/master/README.md).
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload (${{ matrix.os }})
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: http-proxy-ipv6-pool.exe
            asset_name: http-proxy-ipv6-pool-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: http-proxy-ipv6-pool
            asset_name: http-proxy-ipv6-pool-macos-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Compress binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          echo "ASSET_PATH=target/${{ matrix.target }}/release/${{ matrix.asset_name }}.tar.gz" >> $GITHUB_ENV
          echo "ASSET_NAME=${{ matrix.asset_name }}.tar.gz" >> $GITHUB_ENV

      - name: Compress binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          echo "ASSET_PATH=target/${{ matrix.target }}/release/${{ matrix.asset_name }}.zip" >> $env:GITHUB_ENV
          echo "ASSET_NAME=${{ matrix.asset_name }}.zip" >> $env:GITHUB_ENV

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
          name: ${{ env.ASSET_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
